# Git Configuration

[user]
	# If you have only one account define them here, otherwise do it per repository with `git config --local`
	# name =
	# email =

[init]
	defaultBranch = main

[pull]
	rebase = true

[color]
	# Enable colors in color-supporting terminals
	ui = auto

[alias]
	# List available aliases
	aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'

	# Command shortcuts
	st = status
	ci = commit
	br = branch
	co = checkout
	ds = diff --staged

	# Display tree-like log, because default log is a pain...
	lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'

	# Useful when you have to update your last commit
	# with staged files without editing the commit message.
	oops = commit --amend --no-edit

	# List local commits that were not pushed to remote repository
	review-local = "!git lg @{push}.."

	# Edit last commit message
	reword = commit --amend

	# Undo last commit but keep changed files in stage
	uncommit = reset --soft HEAD~1

	# Remove file(s) from Git but not from disk
	untrack = rm --cache --

	# Unstage files (undo git add)
	unstage = reset HEAD --

[core]
	# Use delta as the pager
	pager = delta --dark
	# Global ignore file (not shared)
	excludesfile = ~/.gitignore_global
	# Use Zed as the default editor
	editor = zed --wait
	# Don't consider trailing space change as a cause for merge conflicts
	whitespace = -trailing-space

[interactive]
	diffFilter = delta --color-only

[delta]
    side-by-side = true
    line-numbers = true
    hyperlinks = true
	navigate = true
    features = 1337

[merge]
	conflictstyle = diff3

[diff]
	colorMoved = default

[push]
	# Default push should only push the current branch to its push target, regardless of its remote name
	default = upstream
	# When pushing, also push tags whose commit-ishs are now reachable upstream
	followTags = true

[rebase]
	# Rebase advanced usage.
	# Automagically reorder and prefix your commands while doing an interactive
	# rebase. This has to be used with `--fixup` and/or `--squash` options for
	# `git commit`.
	autoSquash = true
	# Automatically stash current WD and stage when running rebase
	# then you won't have to manually `git stash push` and `git stash pop`
	# after and before your rebase.
	autoStash = true

[help]
	autocorrect = 30

[rerere]
	enabled = true
	autoupdate = true

[tag]
	# Sort tags as version numbers whenever applicable, so 1.10.2 is AFTER 1.2.0.
	sort = version:refname

[versionsort]
	prereleaseSuffix = -pre
	prereleaseSuffix = .pre
	prereleaseSuffix = -beta
	prereleaseSuffix = .beta
	prereleaseSuffix = -rc
	prereleaseSuffix = .rc

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
